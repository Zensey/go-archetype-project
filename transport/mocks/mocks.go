// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIConnWrapper is a mock of IConnWrapper interface.
type MockIConnWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockIConnWrapperMockRecorder
}

// MockIConnWrapperMockRecorder is the mock recorder for MockIConnWrapper.
type MockIConnWrapperMockRecorder struct {
	mock *MockIConnWrapper
}

// NewMockIConnWrapper creates a new mock instance.
func NewMockIConnWrapper(ctrl *gomock.Controller) *MockIConnWrapper {
	mock := &MockIConnWrapper{ctrl: ctrl}
	mock.recorder = &MockIConnWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIConnWrapper) EXPECT() *MockIConnWrapperMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockIConnWrapper) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockIConnWrapperMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockIConnWrapper)(nil).Close))
}

// ReadMessage mocks base method.
func (m *MockIConnWrapper) ReadMessage() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMessage")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadMessage indicates an expected call of ReadMessage.
func (mr *MockIConnWrapperMockRecorder) ReadMessage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMessage", reflect.TypeOf((*MockIConnWrapper)(nil).ReadMessage))
}

// RemoteAddr mocks base method.
func (m *MockIConnWrapper) RemoteAddr() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoteAddr")
	ret0, _ := ret[0].(string)
	return ret0
}

// RemoteAddr indicates an expected call of RemoteAddr.
func (mr *MockIConnWrapperMockRecorder) RemoteAddr() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoteAddr", reflect.TypeOf((*MockIConnWrapper)(nil).RemoteAddr))
}

// WriteMessage mocks base method.
func (m *MockIConnWrapper) WriteMessage(msg string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessage", msg)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessage indicates an expected call of WriteMessage.
func (mr *MockIConnWrapperMockRecorder) WriteMessage(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessage", reflect.TypeOf((*MockIConnWrapper)(nil).WriteMessage), msg)
}
